service: api-gateway-to-s3-rest-api

useDotenv: true

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  region: ap-southeast-2  # Updated region to match your S3 bucket in Sydney
  lambdaHashingVersion: 20201221
  logs:
    restApi: true
    level: INFO
  deploymentBucket:
    blockPublicAccess: true
    name: ${self:custom.config.CODE_DEPLOYMENT_BUCKET}
    maxPreviousDeploymentArtifacts: 3

custom: 
  config:
    CODE_DEPLOYMENT_BUCKET: bucketforstack5
    S3_BUCKET: api5tos3

resources:
  Resources:
    IAMRoleForAPIGateway:
      Type: AWS::IAM::Role
      Properties: 
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service: apigateway.amazonaws.com
              Action: sts:AssumeRole
        Description: Role for ${self:service}
        Path: /
        Policies:
          - PolicyName: ${self:service}-role-policy
            PolicyDocument: 
                Version: '2012-10-17'
                Statement:
                  - Effect: Allow
                    Action: s3:PutObject
                    Resource: arn:aws:s3:::${self:custom.config.S3_BUCKET}/*  # Ensures correct S3 bucket ARN
        RoleName: ${self:service}-${self:provider.stage}-Role

    RestAPI:
      Type: AWS::ApiGateway::RestApi
      Properties: 
        Description: API to write request_body to S3
        EndpointConfiguration: 
          Types:
            - REGIONAL
        Name: ${self:service}-${self:provider.stage}

    RestAPIResource:
      Type: AWS::ApiGateway::Resource
      Properties: 
        ParentId: !GetAtt RestAPI.RootResourceId
        PathPart: api
        RestApiId: !Ref RestAPI

    RestAPIObjectPathResource:
      Type: AWS::ApiGateway::Resource
      Properties: 
        ParentId: !Ref RestAPIResource
        PathPart: '{object_path+}'
        RestApiId: !Ref RestAPI

    RestAPIPutMethod:
      Type: AWS::ApiGateway::Method
      Properties: 
        HttpMethod: PUT
        AuthorizationType: NONE
        Integration:
            Type: AWS
            IntegrationHttpMethod: PUT
            Uri: arn:aws:apigateway:ap-southeast-2:s3:path/${stageVariables.bucket_name}/{object_path}  # Updated region in S3 bucket URI
            Credentials: !GetAtt IAMRoleForAPIGateway.Arn
            RequestParameters:
              "integration.request.path.object_path" : "method.request.path.object_path"
            IntegrationResponses:
              - StatusCode: 200
              - StatusCode: 400
        RequestParameters:
          "method.request.path.object_path": true
        OperationName: write-data-to-s3
        ResourceId: !Ref RestAPIObjectPathResource
        RestApiId: !Ref RestAPI
        MethodResponses:
          - StatusCode: 200
            ResponseModels:
              application/json: "Empty"
          - StatusCode: 400
            ResponseModels:
              application/json: "Error"

    RestAPIDeployment:
      Type: AWS::ApiGateway::Deployment
      Properties:
        RestApiId: !Ref RestAPI
      DependsOn:
        - RestAPIPutMethod

    RestAPIStage:
      Type: AWS::ApiGateway::Stage
      Properties: 
        DeploymentId: !Ref RestAPIDeployment
        Description: ${self:provider.stage} stage
        RestApiId: !Ref RestAPI
        StageName: ${self:provider.stage}
        Variables: 
          bucket_name : ${self:custom.config.S3_BUCKET}
